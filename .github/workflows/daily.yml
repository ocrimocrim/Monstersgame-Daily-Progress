name: daily-highscore

on:
  schedule:
    - cron: "13 5 * * *"   # täglicher Lauf (UTC)
  workflow_dispatch:        # manuell startbar

permissions:
  contents: write           # <— nötig zum Committen des state.json

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true   # nutzt den GITHUB_TOKEN für push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          MG_USERNAME:     ${{ secrets.MG_USERNAME }}
          MG_PASSWORD:     ${{ secrets.MG_PASSWORD }}
          MG_COOKIE:       ${{ secrets.MG_COOKIE }}
          MG_PHPSESSID:    ${{ secrets.MG_PHPSESSID }}
          MG_SESSIONID:    ${{ secrets.MG_SESSIONID }}
          MG_CSRFTOKEN:    ${{ secrets.MG_CSRFTOKEN }}
          MG_CONNECT_ID:   ${{ secrets.MG_CONNECT_ID }}
          MG_DEBUG:        ${{ secrets.MG_DEBUG }}      # bei dir schon = 1
        run: |
          mkdir -p data
          python scraper.py

      - name: Persist state.json ins Repo committen
        run: |
          if [ -f data/state.json ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add data/state.json
            git commit -m "chore: update state $(date -u +'%F %T') [skip ci]" || echo "Keine Änderungen"
            git push
          else
            echo "Keine state.json erzeugt."
          fi
