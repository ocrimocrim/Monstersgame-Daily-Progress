name: run-monthly

permissions:
  contents: write

on:
  schedule:
    - cron: "0 19 * * *"   # tÃ¤glich 19:00 UTC, Schritte laufen nur am letzten Kalendertag
  workflow_dispatch:

jobs:
  run-monthly:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check last calendar day (UTC)
        id: lastday
        run: |
          today="$(date -u +%Y-%m-%d)"
          tomorrow="$(date -u -d "$today +1 day" +%Y-%m-%d)"
          m_today="$(date -u -d "$today" +%m)"
          m_tomor="$(date -u -d "$tomorrow" +%m)"
          if [ "$m_today" != "$m_tomor" ]; then
            echo "lastday=true" >> $GITHUB_OUTPUT
            echo "Last day of month: proceeding."
          else
            echo "lastday=false" >> $GITHUB_OUTPUT
            echo "Not last day: skipping."
          fi

      - name: Install deps
        if: steps.lastday.outputs.lastday == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare monthly baseline (use dedicated state file)
        if: steps.lastday.outputs.lastday == 'true'
        run: |
          mkdir -p data
          if [ -f data/monthly_state.json ]; then
            cp -f data/monthly_state.json data/state.json
          fi

      - name: Run monthly scraper
        if: steps.lastday.outputs.lastday == 'true'
        env:
          SCOPE: monthly
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          MG_USERNAME: ${{ secrets.MG_USERNAME }}
          MG_PASSWORD: ${{ secrets.MG_PASSWORD }}
          MG_SESSIONID: ${{ secrets.MG_SESSIONID }}
          MG_PHPSESSID: ${{ secrets.MG_PHPSESSID }}
          MG_COOKIE: ${{ secrets.MG_COOKIE }}
          MG_CSRFTOKEN: ${{ secrets.MG_CSRFTOKEN }}
          MG_CONNECT_ID: ${{ secrets.MG_CONNECT_ID }}
        run: |
          python scraper.py

      - name: Persist monthly baseline (mirror to monthly_state.json)
        if: steps.lastday.outputs.lastday == 'true'
        run: |
          mkdir -p data
          if [ -f data/state.json ]; then
            cp -f data/state.json data/monthly_state.json
          fi

      - name: Commit monthly state
        if: steps.lastday.outputs.lastday == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/state.json data/monthly_state.json || true
          git commit -m "monthly state update" || echo "no changes"
          git fetch origin main
          git pull --rebase origin main || true
          git push || true
